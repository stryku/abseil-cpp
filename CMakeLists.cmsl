import "CMake/AbseilInstallDirs";
import "CMake/AbseilHelpers";

// DownloadGTest.cmsl is not implemented yet.
import "CMake/DownloadGTest";

auto prepare_testing(bool use_googletest_head) {
  if (use_googletest_head) {
    absl::prepare_gtest();
  }

  absl::check_target("gtest");
  absl::check_target("gtest_main");
  absl::check_target("gmock");

  auto threads = cmake::find_package_required("Threads");

  absl::test_common_libraries += {gtest_main, gtest, gmock, threads.libs_init};
}

auto prepare_installation(cmake::project absl_project) {
  auto system_install_dirs = {"/usr/local/", "/usr", "/opt/", "/opt/local",
                              "c:/Program Files" / absl_project.name()};

  // absl:lts-remove-begin(system installation is supported for LTS releases)
  if (cmake::install_prefix.empty() ||
      system_install_dirs.contains(cmake::install_prefix)) {
    cmake::warning(
        "The default and system-level install directories are unsupported except in LTS "
        "releases of Abseil.  Please set CMAKE_INSTALL_PREFIX to install Abseil in your "
        "source or build tree directly.");
  }
  // absl:lts-remove-end

  cmake::export(absl_project.name() + "Targets", absl::install_configdir,
                {.namespace = "absl::"});

  auto config_file_path =
      absl_project.binary_dir() / absl_project.name() + "Config.cmake";
  cmake::configure_package_config_file(
      "CMake/abslConfig.cmake.in", config_file_path, absl::install_configdir);

  cmake::install_files(config_file_path, absl::install_configdir);

  auto absl_version = extern<string>("absl_VERSION");
  if (absl_version.has_value()) {
    auto config_version_file_path =
        absl_project.binary_dir() / absl.name() + "ConfigVersion.cmake";
    cmake::write_basic_package_version_file(
        config_version_file_path, cmake::compatibality::exact_version);
    cmake::install_files(config_version_file_path, absl::install_configdir);
  }

  cmake::install_directory("absl", absl::install_includedir,
                           {.file_patterns = {"*.inc", "*.h"}});
}

int main() {
  cmake::minimum_required(cmake::version(3.14));

  project absl_project("absl");

  bool enable_install = cmake::is_top_level_script();
  bool using_clang =
      (cmake::get_cxx_compiler_info().id == cmake::cxx_compiler_id::clang);

  cmake::module_path += {cmake::current_source_dir() / "CMake",
                         cmake::current_source_dir() / "absl/copts"};

  absl::common_include_dirs += cmake::current_source_dir();

  auto run_tests = option("ABSL_RUN_TESTS", "If ON, Abseil tests will be run.", false)
  auto use_googletest_head = option("ABSL_USE_GOOGLETEST_HEAD", "If ON, Abseil tests will be run.", false)

  if (run_tests) {
    cmake::enable_ctest();
  }

  if (cmake::ctest::build_testing) {
    prepare_testing(use_googletest_head);
  }

  add_subdirectory("absl");

  if (enable_install) {
    prepare_installation(absl_project);
  }

  return 0;
}
