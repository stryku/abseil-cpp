import "CMake/AbseilHelpers";
import "CMake/AbseilConfigureCopts";

int main() {
  auto base = cmake::declare_library("absl::base");
  auto core_headers = cmake::declare_library("absl::core_headers");
  auto memory = cmake::declare_library("absl::memory");
  auto meta = cmake::declare_library("absl::meta");
  auto span = cmake::declare_library("absl::span");
  auto gmock_main = cmake::declare_library("gmock_main");

  auto algorithm = absl::cc_library(
      "algorithm",
      {.hdrs = {"algorithm.h"}, .copts = absl::default_copts, .public = true});

  absl::cc_test("algorithm_test", {.srcs = {"algorithm_test.cc"},
                                   .copts = absl::test_copts,
                                   .deps = {algorithm, gmock_main}});

  auto algorithm_container = absl::cc_library(
      "algorithm_container", {.hdrs = {"container.h"},
                              .copts = absl::default_copts,
                              .deps = {algorithm, core_headers, meta}});

  absl::cc_test("container_test",
                {.srcs = {"container_test.cc"},
                 .copts = absl::test_copts,
                 .deps = {algorithm_container, base, core_headers, memory, span,
                          gmock_main}});
}
